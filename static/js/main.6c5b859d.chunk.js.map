{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2RAiCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,gBC4COC,G,kNAvDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,uDAWZ,WACEQ,KAAKN,c,oBAQP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAACe,GAAD,OACV,cAAC,EAAD,CAGEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QAPTmB,EAAMC,e,GAvCTE,IAAMC,YCFxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6c5b859d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">{title}</h3>\r\n        <h5 className=\"movie_year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n// export를 해줘야 다른 js에서 Movie라는 component 사용가능\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n// state를 이용하기 위해서 class component를 사용한다.\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n  // ES6에서의 기능으로 오브젝트 안에 있는 값을 불러올 수 있습니다.\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n    // setTimeout(() => {\n    //   this.setState({ isLoading: false });\n    // }, 6000);\n  }\n  // async : componentDidMount 함수가 끝날 때까지 시간이 걸리 수 있다고 말해주는 기능\n  // await : axio가 끝날때까지 기다린다.\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                // key가 있어야 한다.\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n\n// class App extends React.Component {\n//   state = {\n//     count: 0,\n//   };\n//   add = () => {\n//     this.setState((current) => ({ count: current.count + 1 }));\n//   };\n//   minus = () => {\n//     this.setState((current) => ({ count: current.count - 1 }));\n//   };\n//   componentDidMount() {\n//     console.log(\"component rendered\");\n//   }\n//   // component가 생성될 때\n//   componentDidUpdate() {\n//     console.log(\"i just updated\");\n//   }\n//   componentWillUnmount() {\n//     console.log(\"goodbye, cruel world\");\n//   }\n//   // component가 떠날 때 호출된다.\n//   render() {\n//     console.log(\"im rendering\");\n//     return (\n//       <div>\n//         <h1>The number is: {this.state.count}</h1>\n//         <button onClick={this.add}>Add</button>\n//         <button onClick={this.minus}>Minus</button>\n//       </div>\n//     );\n//   }\n// }\n// // Function component는 function이고 뭔가를 return한다. 또한 screen에 표시된다.\n// // class component는 class이지만 react component로 부터 확장되고 sreen에 표시된다.\n// // set.state를 호출할 때마다\n// // constructor render 전에 된다.\n// // componentDidMount() render 후에 된다.\n// // Updating\n// // - static getDerivedStateFromProps()\n// // - shouldComponentUpdate()\n// // - render()\n// // - getSnapshotBeforeUpdate()\n// // - componentDidUpdate()\n\n// export default App;\n\n// import React from \"react\";\n// import PropTypes from \"prop-types\";\n//export default App;\n\n// const foodILike = [\n//   {\n//     name: \"Kimchi\",\n//     image:\n//       \"http://aeriskitchen.com/wp-content/uploads/2008/09/kimchi_bokkeumbap_02-.jpg\",\n//     rating: 4.9,\n//   },\n//   {\n//     name: \"Samgyeopsal\",\n//     image:\n//       \"https://3.bp.blogspot.com/-hKwIBxIVcQw/WfsewX3fhJI/AAAAAAAAALk/yHxnxFXcfx4ZKSfHS_RQNKjw3bAC03AnACLcBGAs/s400/DSC07624.jpg\",\n//     rating: 4.8,\n//   },\n//   {\n//     name: \"Bibimbap\",\n//     image:\n//       \"http://cdn-image.myrecipes.com/sites/default/files/styles/4_3_horizontal_-_1200x900/public/image/recipes/ck/12/03/bibimbop-ck-x.jpg?itok=RoXlp6Xb\",\n//     rating: 5.5,\n//   },\n//   {\n//     name: \"Doncasu\",\n//     image:\n//       \"https://s3-media3.fl.yelpcdn.com/bphoto/7F9eTTQ_yxaWIRytAu5feA/ls.jpg\",\n//     rating: 4.7,\n//   },\n//   {\n//     name: \"Kimbap\",\n//     image:\n//       \"http://cdn2.koreanbapsang.com/wp-content/uploads/2012/05/DSC_1238r-e1454170512295.jpg\",\n//     rating: 5.4,\n//   },\n// ];\n\n// function Food({ name, picture, rating }) {\n//   return (\n//     <div>\n//       <h2>I like {name}</h2>\n//       <h4>{rating}/5.0</h4>\n//       <img src={picture} alt={name} />\n//     </div>\n//   );\n// }\n\n// Food.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   rating: PropTypes.number.isRequired,\n// };\n\n// function App() {\n//   return (\n//     <div>\n//       {foodILike.map((dish) => (\n//         <Food\n//           key={dish.id}\n//           name={dish.name}\n//           picture={dish.image}\n//           rating={dish.rating}\n//         />\n//       ))}\n//     </div>\n//   );\n// }\n\n// props 는 component에 넣게 되는 것들을 말한다.\n// map은 array의 각 item에 function을 적용하고 array를 준다.\n// 따라서 map은 array를 취하고 우리가 정확히 원하는 array를 반환한다.\n// state는 동적 데이터와 함께 작업할 때 만들어진다. 변하는 데이터, 존재하지 않는 데이터, 변경된 데이터 등등\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}